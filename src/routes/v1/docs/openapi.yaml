openapi: 3.0.0
info:
  title: Music Library Management API
  version: 1.0.0
  description: |
    API for managing music library, including users, artists, albums, tracks,
    and favorites.

servers:
  - url: https://your-hosted-url/api/v1

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

tags:
  - name: Authentication
    description: API for user authentication
  - name: Users
    description: API for user management
  - name: Artists
    description: API for managing artists
  - name: Albums
    description: API for managing albums
  - name: Tracks
    description: API for managing tracks
  - name: Favorites
    description: API for managing user favorites

paths:
  /logout:
    get:
      summary: Logout a user
      tags: [Authentication]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User logged out successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: object
                    nullable: true
                  message:
                    type: string
                  error:
                    type: object
                    nullable: true
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: object
                    nullable: true
                  message:
                    type: string
                  error:
                    type: object
                    nullable: true

  /signup:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: User created successfully.
        '400':
          description: Bad Request, Missing fields.
        '409':
          description: Email already exists.

  /login:
    post:
      summary: Login a user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully.
        '400':
          description: Bad Request, Missing fields.
        '404':
          description: User not found.

  /users:
    get:
      summary: Retrieve all users
      tags: [Users]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Users fetched successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.

  /users/add-user:
    post:
      summary: Add a new user
      tags: [Users]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                role:
                  type: string
                  enum: [editor, viewer]
      responses:
        '201':
          description: User created successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '409':
          description: Email already exists.

  /users/{id}:
    delete:
      summary: Delete a user
      tags: [Users]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: User not found.

    put:
      summary: Update user password
      tags: [Users]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
      responses:
        '204':
          description: Password updated successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: User not found.

  /artists:
    get:
      summary: Retrieve all artists
      tags: [Artists]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Artists fetched successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.

  /artists/{id}:
    get:
      summary: Retrieve an artist
      tags: [Artists]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Artist ID
          schema:
            type: string
      responses:
        '200':
          description: Artist fetched successfully.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Artist not found.

    post:
      summary: Add a new artist
      tags: [Artists]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                grammy:
                  type: boolean
                hidden:
                  type: boolean
      responses:
        '201':
          description: Artist created successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.

    put:
      summary: Update an artist
      tags: [Artists]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Artist ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                grammy:
                  type: boolean
                hidden:
                  type: boolean
      responses:
        '204':
          description: Artist updated successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Artist not found.

    delete:
      summary: Delete an artist
      tags: [Artists]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Artist ID
          schema:
            type: string
      responses:
        '200':
          description: Artist deleted successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Artist not found.

  /albums:
    get:
      summary: Retrieve all albums
      tags: [Albums]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Albums fetched successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.

  /albums/{id}:
    get:
      summary: Retrieve an album
      tags: [Albums]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Album ID
          schema:
            type: string
      responses:
        '200':
          description: Album fetched successfully.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Resource Doesn't Exist.

    post:
      summary: Add a new album
      tags: [Albums]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                artist_id:
                  type: string
                name:
                  type: string
                year:
                  type: integer
                hidden:
                  type: boolean
      responses:
        '201':
          description: Album created successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.

    put:
      summary: Update an album
      tags: [Albums]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Album ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                year:
                  type: integer
                hidden:
                  type: boolean
      responses:
        '204':
          description: Album updated successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Resource Doesn't Exist.

    delete:
      summary: Delete an album
      tags: [Albums]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Album ID
          schema:
            type: string
      responses:
        '200':
          description: Album deleted successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Resource Doesn't Exist.

  /tracks:
    get:
      summary: Retrieve all tracks
      tags: [Tracks]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Tracks fetched successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.

  /tracks/{id}:
    get:
      summary: Retrieve a track
      tags: [Tracks]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Track ID
          schema:
            type: string
      responses:
        '200':
          description: Track fetched successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Resource Doesn't Exist.

    post:
      summary: Add a new track
      tags: [Tracks]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                artist_id:
                  type: string
                album_id:
                  type: string
                name:
                  type: string
                duration:
                  type: integer
                hidden:
                  type: boolean
      responses:
        '201':
          description: Track created successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.

    put:
      summary: Update a track
      tags: [Tracks]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Track ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                duration:
                  type: integer
                hidden:
                  type: boolean
      responses:
        '204':
          description: Track updated successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Resource Doesn't Exist.

    delete:
      summary: Delete a track
      tags: [Tracks]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Track ID
          schema:
            type: string
      responses:
        '200':
          description: Track deleted successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Resource Doesn't Exist.

  /favorites/{category}:
    get:
      summary: Retrieve favorites by category
      tags: [Favorites]
      security:
        - BearerAuth: []
      parameters:
        - name: category
          in: path
          required: true
          description: Category of favorites (artist, album, track)
          schema:
            type: string
      responses:
        '200':
          description: Favorites fetched successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.

    post:
      summary: Add a favorite item
      tags: [Favorites]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  enum: [artist, album, track]
                item_id:
                  type: string
      responses:
        '201':
          description: Favorite added successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.

  /favorites/remove-favorite/{id}:
    delete:
      summary: Remove a favorite item
      tags: [Favorites]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Favorite ID
          schema:
            type: string
      responses:
        '200':
          description: Favorite removed successfully.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden Access.
        '404':
          description: Resource Doesn't Exist.
